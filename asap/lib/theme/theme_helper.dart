import 'dart:ui';
import 'package:flutter/material.dart';
import 'package:asap/core/utils/size_utils.dart';

String _appTheme = "primary";

/// Helper class for managing themes and colors.
class ThemeHelper {
  // A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    _appTheme = _newTheme;
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.whiteA70001,
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: appTheme.whiteA70001.withOpacity(0.53),
            width: 1.h,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(6.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(5.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 76,
        space: 76,
        color: colorScheme.onPrimaryContainer,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyMedium: TextStyle(
          color: appTheme.gray900,
          fontSize: 13.fSize,
          fontFamily: 'Mulish',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.gray900.withOpacity(0.6),
          fontSize: 12.fSize,
          fontFamily: 'Mulish',
          fontWeight: FontWeight.w400,
        ),
        headlineLarge: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: 30.fSize,
          fontFamily: 'Mulish',
          fontWeight: FontWeight.w700,
        ),
        labelLarge: TextStyle(
          color: appTheme.gray900,
          fontSize: 13.fSize,
          fontFamily: 'Mulish',
          fontWeight: FontWeight.w600,
        ),
        labelMedium: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: 11.fSize,
          fontFamily: 'Mulish',
          fontWeight: FontWeight.w600,
        ),
        titleLarge: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: 20.fSize,
          fontFamily: 'Mulish',
          fontWeight: FontWeight.w700,
        ),
        titleMedium: TextStyle(
          color: appTheme.gray900,
          fontSize: 16.fSize,
          fontFamily: 'Mulish',
          fontWeight: FontWeight.w600,
        ),
        titleSmall: TextStyle(
          color: appTheme.gray900,
          fontSize: 14.fSize,
          fontFamily: 'Mulish',
          fontWeight: FontWeight.w600,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF3EADBF),

    // On colors(text colors)
    onPrimary: Color(0XFF2A2A2A),
    onPrimaryContainer: Color(0XFFB4FFC9),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // BlackB
  Color get black900B5 => Color(0XB5000000);

  // Blue
  Color get blue100 => Color(0XFFBDDDF1);
  Color get blue10001 => Color(0XFFC4E1F1);
  Color get blue20007 => Color(0X079AD5F7);
  Color get blue50 => Color(0XFFE9F6FF);
  Color get blue5001 => Color(0XFFE3F3FC);
  Color get blue5002 => Color(0XFFE8F6FD);
  Color get blue5003 => Color(0XFFEAF7FF);
  Color get blue600 => Color(0XFF1995DB);

  // BlueGray
  Color get blueGray100 => Color(0XFFC4E2E4);
  Color get blueGray600 => Color(0XFF5C747C);

  // BlueGrayf
  Color get blueGray1003f => Color(0X3FD4D4D4);

  // Cyan
  Color get cyan300 => Color(0XFF58CFDB);
  Color get cyan30001 => Color(0XFF50CDD5);
  Color get cyan400 => Color(0XFF1ABCE0);
  Color get cyan40001 => Color(0XFF33D0E1);
  Color get cyan40002 => Color(0XFF35CBD5);
  Color get cyan40003 => Color(0XFF2EBDD7);
  Color get cyan50 => Color(0XFFE2FAFD);
  Color get cyan5001 => Color(0XFFCAFFF8);
  Color get cyan5002 => Color(0XFFD1FCFF);

  // DeepOrange
  Color get deepOrange100 => Color(0XFFFFD3BD);
  Color get deepOrange300 => Color(0XFFFF9458);
  Color get deepOrangeA200 => Color(0XFFFF792E);
  Color get deepOrangeA20001 => Color(0XFFFF7937);
  Color get deepOrangeA20002 => Color(0XFFFF7A2F);

  // DeepPurple
  Color get deepPurple600 => Color(0XFF5C3CB7);
  Color get deepPurpleA200 => Color(0XFF9250FF);

  // Gray
  Color get gray100 => Color(0XFFEDF5FA);
  Color get gray200 => Color(0XFFEFEFEF);
  Color get gray300 => Color(0XFFE6E6E6);
  Color get gray30000 => Color(0X00E4E4E4);
  Color get gray30001 => Color(0XFFE3E3E3);
  Color get gray50 => Color(0XFFF3FAFF);
  Color get gray5001 => Color(0XFFF2F8FF);
  Color get gray5002 => Color(0XFFF7FDFF);
  Color get gray5003 => Color(0XFFFAFAFA);
  Color get gray800 => Color(0XFF584338);
  Color get gray80001 => Color(0XFF474747);
  Color get gray900 => Color(0XFF2B2A2A);

  // Grayd
  Color get gray3006d => Color(0X6DD5E0E7);

  // Green
  Color get green300 => Color(0XFF70BA82);
  Color get green30001 => Color(0XFF5AD28A);
  Color get green30002 => Color(0XFF7ECC93);
  Color get green500 => Color(0XFF4EA56C);
  Color get green50001 => Color(0XFF32CA5C);

  // Indigo
  Color get indigo400 => Color(0XFF4A8EC8);

  // LightBlue
  Color get lightBlue100 => Color(0XFFAEF3FF);
  Color get lightBlue10001 => Color(0XFFADF0FF);
  Color get lightBlue10087 => Color(0X87C1EEFF);
  Color get lightBlue300 => Color(0XFF56BFEC);
  Color get lightBlue400 => Color(0XFF2FBFFC);
  Color get lightBlue40001 => Color(0XFF1DADF2);
  Color get lightBlue50 => Color(0XFFD5F5FF);
  Color get lightBlue5066 => Color(0X66E5FAFF);
  Color get lightBlue5087 => Color(0X87E9F9FF);
  Color get lightBlueA100 => Color(0XFF95DFFF);

  // Orange
  Color get orange100 => Color(0XFFFFDEC6);

  // Pink
  Color get pink500 => Color(0XFFF1315F);

  // Purple
  Color get purple500 => Color(0XFFA04491);

  // Red
  Color get red500 => Color(0XFFEE483D);
  Color get redA100 => Color(0XFFFA757B);

  // Teal
  Color get teal10038 => Color(0X38B8DCE9);

  // Teale
  Color get teal9009e => Color(0X9E003C42);

  // White
  Color get whiteA700 => Color(0XFFFCFEFF);
  Color get whiteA70001 => Color(0XFFFFFFFF);

  // Yellow
  Color get yellow900 => Color(0XFFF26F22);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
